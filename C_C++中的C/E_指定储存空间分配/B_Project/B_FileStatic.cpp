//
// Created by 何时夕 on 2017/12/9.
//
#include <iostream>
using namespace std;

static int fs;
extern void func();
int main(){
    fs = 1;
    cout << " fs= " << fs << endl;
    func();
    cout << " fs= " << fs << endl;
    /**
     * 1.static 可以修饰 函数外变量 和 函数，被声明了的 函数外变量 和函数 不能被外部文件引用。
     * 具体表现为 在编译时会报错 此时 make 的时候会报错。
     * 2.之前static还有一个用处就是 修饰 局部变量。例子在：A_Static 中
     *
     * 连接：
     * 1.标识符表示 函数外变量或者函数体 的储存空间
     * 2.连接 用 连接器 可以解析的方式描述储存空间
     *
     * 内部连接：
     * 1.为每个文件中的 标识符 创建单独的储存空间，此时多个文件中 标识符 可以重名
     * 2.static修饰的 标识符 就为内部连接
     *
     * 外部连接：
     * 1.为所有编译过的文件单独生成一片空间，所有文件的 标识符 都处于同一片 储存空间中，标识符 就不能重名
     * 2.标识符默认是 外部连接的 只是在使用的时候，需要使用 extern 显示指定。
     * 3.可以通过static将 标识符 修饰为内部连接
     *
     * 1.const修饰的标识符是特例 在后面讲
     * 2.函数内部的局部变量 存在于堆栈中，连接器不感知 所以没有连接性
     */
}
