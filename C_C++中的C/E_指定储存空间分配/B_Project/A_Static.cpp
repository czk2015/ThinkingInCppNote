//
// Created by 何时夕 on 2017/12/9.
//
#include <iostream>
using namespace std;

void func(){
    static int i = 0;
    cout << "i = " << ++i << endl;
}

int main(){
    for (int i = 0; i < 10; ++i) {
        func();
    }
    /**
     * i = 1
     * i = 2
     * i = 3
     * i = 4
     * i = 5
     * i = 6
     * i = 7
     * i = 8
     * i = 9
     * i = 10
     *
     * 1.局部变量的生命周期在作用域结束的时候结束，每次调用函数都会重新初始化局部变量
     * 2.如果在局部变量前面加上一个 static，那么这个局部变量的生命周期就和程序一致，只会在函数第一次调用的时候初始化一次。
     * 3.静态局部变量 虽然生命周期是全局的，但是只有作用域内才能访问他。这样函数外部就不能轻易访问他，可以保证错误局部化
     */
}

